{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortedGoods","setSortedGoods","isAlphabetical","setIsAlphabetical","isByLength","setIsByLength","isReversed","setIsReversed","shouldShowResetButton","JSON","stringify","resetButtonClass","classNames","className","type","onClick","newGoods","sort","reverse","a","b","length","reversedGoods","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAsCC,mBAAS,GAAD,OAAKF,IAAnD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAgCMC,IACJC,KAAKC,UAAUV,KAAiBS,KAAKC,UAAUb,IAG3Cc,EAAmBC,IACvB,SACA,YAAa,CACX,WAAYV,GACTE,GACAE,IAIP,OACE,sBAAKO,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWD,IACT,SACA,UAAW,CACT,YAAaV,IAGjBa,QAtDmB,WACzB,IAAMC,EAAWhB,EAAYiB,OAE7BhB,EAAeK,EAAaU,EAASE,UAAYF,GACjDb,GAAkB,GAClBE,GAAc,IAyCV,iCAaA,wBACES,KAAK,SACLD,UAAWD,IACT,SACA,aAAc,CACZ,YAAaR,IAGjBW,QA3Da,WACnB,IAAMC,EAAW,UAAInB,GAAiBoB,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAElEpB,EAAeK,EAAaU,EAASE,UAAYF,GACjDb,GAAkB,GAClBE,GAAc,IA8CV,4BAaA,wBACES,KAAK,SACLD,UAAWD,IACT,SACA,aAAc,CACZ,YAAaN,IAGjBS,QAhEa,WACnB,IAAMO,EAAgBtB,EAAYkB,UAElCjB,EAAeqB,GACff,GAAeD,IAoDX,qBAaCE,GACC,wBACEM,KAAK,SACLD,UAAWF,EACXI,QAlEW,WACnBd,EAAe,GAAD,OAAKJ,IACnBM,GAAkB,GAClBE,GAAc,GACdE,GAAc,IA2DR,sBAUJ,6BACGP,EAAYuB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50553453.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortedGoods, setSortedGoods] = useState([...goodsFromServer]);\n  const [isAlphabetical, setIsAlphabetical] = useState(false);\n  const [isByLength, setIsByLength] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortAlphabetically = () => {\n    const newGoods = sortedGoods.sort();\n\n    setSortedGoods(isReversed ? newGoods.reverse() : newGoods);\n    setIsAlphabetical(true);\n    setIsByLength(false);\n  };\n\n  const sortByLength = () => {\n    const newGoods = [...goodsFromServer].sort((a, b) => a.length - b.length);\n\n    setSortedGoods(isReversed ? newGoods.reverse() : newGoods);\n    setIsAlphabetical(false);\n    setIsByLength(true);\n  };\n\n  const reverseGoods = () => {\n    const reversedGoods = sortedGoods.reverse();\n\n    setSortedGoods(reversedGoods);\n    setIsReversed(!isReversed);\n  };\n\n  const resetSorting = () => {\n    setSortedGoods([...goodsFromServer]);\n    setIsAlphabetical(false);\n    setIsByLength(false);\n    setIsReversed(false);\n  };\n\n  const shouldShowResetButton = !(\n    JSON.stringify(sortedGoods) === JSON.stringify(goodsFromServer)\n  );\n\n  const resetButtonClass = classNames(\n    'button',\n    'is-danger', {\n      'is-light': isAlphabetical\n      || isByLength\n      || isReversed,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info', {\n              'is-light': !isAlphabetical,\n            },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success', {\n              'is-light': !isByLength,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {shouldShowResetButton && (\n          <button\n            type=\"button\"\n            className={resetButtonClass}\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}